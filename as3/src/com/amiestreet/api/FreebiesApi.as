/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.amiestreet.api {

  import flash.net.Responder;
  import flash.net.NetConnection;

  public class FreebiesApi {
    private var connection:NetConnection;

    public function FreebiesApi(conn:NetConnection) {
      connection = conn;
    }

    public function getPlaylist(genreGroupId:String, excludeSongIds:String, onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Array):void {
          if(onSuccess != null) {
            onSuccess(ThriftUtils.makeList(SongVO, result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('FreebiesApi.getPlaylist', resp, {genreGroupId: genreGroupId, excludeSongIds: excludeSongIds});
    } // end getPlaylist

    public function getPlaylistSongIds(genreGroupId:String, excludeSongIds:String, onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Array):void {
          if(onSuccess != null) {
            onSuccess(ThriftUtils.makeList(String, result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('FreebiesApi.getPlaylistSongIds', resp, {genreGroupId: genreGroupId, excludeSongIds: excludeSongIds});
    } // end getPlaylistSongIds

    public function getAllGenresList(onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Array):void {
          if(onSuccess != null) {
            onSuccess(ThriftUtils.makeList(GenreVO, result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('FreebiesApi.getAllGenresList', resp, {});
    } // end getAllGenresList

    public function getAllGenreGroups(onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Array):void {
          if(onSuccess != null) {
            onSuccess(ThriftUtils.makeList(GenreGroupVO, result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('FreebiesApi.getAllGenreGroups', resp, {});
    } // end getAllGenreGroups

    public function freeCountInGroup(genreGroupId:String, onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Object):void {
          if(onSuccess != null) {
            onSuccess(new int(result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('FreebiesApi.freeCountInGroup', resp, {genreGroupId: genreGroupId});
    } // end freeCountInGroup

  }
}
