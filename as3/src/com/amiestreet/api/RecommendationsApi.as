/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.amiestreet.api {

  import flash.net.Responder;
  import flash.net.NetConnection;

  public class RecommendationsApi {
    private var connection:NetConnection;

    public function RecommendationsApi(conn:NetConnection) {
      connection = conn;
    }

    public function isNew(onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Object):void {
          if(onSuccess != null) {
            onSuccess(new Boolean(result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('RecommendationsApi.isNew', resp, {});
    } // end isNew

    public function refresh(onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Object):void {
          if(onSuccess != null) {
            onSuccess(new Boolean(result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('RecommendationsApi.refresh', resp, {});
    } // end refresh

    public function addSeedArtist(name:String, source:String, onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Object):void {
          if(onSuccess != null) {
            onSuccess(new RecommendationsSeedArtistVO(result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('RecommendationsApi.addSeedArtist', resp, {name: name, source: source});
    } // end addSeedArtist

    public function removeSeedArtist(name:String, onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Object):void {
          if(onSuccess != null) {
            onSuccess(new Boolean(result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('RecommendationsApi.removeSeedArtist', resp, {name: name});
    } // end removeSeedArtist

    public function listSeedArtists(onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Array):void {
          if(onSuccess != null) {
            onSuccess(ThriftUtils.makeList(RecommendationsSeedArtistVO, result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('RecommendationsApi.listSeedArtists', resp, {});
    } // end listSeedArtists

    public function recommend(offset:int, count:int, genreGroup:String, fingerprint:String, onSuccess:Function = null, onError:Function = null):void {
      var resp:Responder = new Responder(
        function(result:Array):void {
          if(onSuccess != null) {
            onSuccess(ThriftUtils.makeList(RecommendationVO, result));
          }
        },
        function(error:Object):void {
          if(onError != null) {
            onError(error);
          }
        });
      connection.call('RecommendationsApi.recommend', resp, {offset: offset, count: count, genreGroup: genreGroup, fingerprint: fingerprint});
    } // end recommend

  }
}
